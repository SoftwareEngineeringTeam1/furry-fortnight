{"remainingRequest":"/Users/AJApple/Downloads/furry-fortnight/fiu-map/node_modules/babel-loader/lib/index.js!/Users/AJApple/Downloads/furry-fortnight/fiu-map/node_modules/eslint-loader/index.js??ref--13-0!/Users/AJApple/Downloads/furry-fortnight/fiu-map/src/views/EventPage/EventPage.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/AJApple/Downloads/furry-fortnight/fiu-map/src/views/EventPage/EventPage.js","mtime":1574892304000},{"path":"/Users/AJApple/Downloads/furry-fortnight/fiu-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/AJApple/Downloads/furry-fortnight/fiu-map/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/AJApple/Downloads/furry-fortnight/fiu-map/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/Users/AJApple/Downloads/furry-fortnight/fiu-map/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\nimport NewEvent from \"../../components/NewEvent/NewEvent.vue\";\nimport Table from \"../../components/Table/Table.vue\";\nimport Map from \"../../components/Map/Map.vue\";\nimport ViewEvent from \"../../components/ViewEvent/ViewEvent.vue\";\nexport default {\n  name: \"EventPage\",\n  props: {\n    source: String\n  },\n  components: {\n    NewEvent: NewEvent,\n    Table: Table,\n    Map: Map,\n    ViewEvent: ViewEvent\n  },\n  computed: _objectSpread({}, mapGetters([\"Categories\", \"Locations\", \"Organizations\", \"EventList\", \"ShowList\", \"FilteredEventList\", \"Todos\", \"NewEventDialog\"]), {\n    iconCategory: function iconCategory() {\n      if (this.SelectedCategories.length == this.$store.getters.Categories.length) return \"mdi-close-box\";\n      return \"mdi-checkbox-blank-outline\";\n    },\n    iconOrganization: function iconOrganization() {\n      if (this.SelectedOrganizations.length == this.$store.getters.Organizations.length) return \"mdi-close-box\";\n      return \"mdi-checkbox-blank-outline\";\n    },\n    iconLocation: function iconLocation() {\n      if (this.SelectedLocations.length == this.$store.getters.Locations.length) return \"mdi-close-box\";\n      return \"mdi-checkbox-blank-outline\";\n    }\n  }),\n  methods: _objectSpread({}, mapActions([\"updateCategories\", \"updateLocations\", \"updateOrganizations\", \"updateFilteredEventList\", \"fetchTodos\", \"changeNewEventDialog\"]), {}, mapMutations([\"updateCategories\", \"updateLocations\", \"updateOrganizations\", \"updateDate\", \"updateFilteredEventList\"]), {\n    allowedHours: function allowedHours(v) {\n      return v >= 8 && v <= 22;\n    },\n    allowedMinutes: function allowedMinutes(v) {\n      return !(v % 15);\n    },\n    allowedDates: function allowedDates(val) {\n      var threeMonthsLater = new Date();\n      threeMonthsLater.setMonth(this.today.getMonth() + 3);\n      if (val >= this.today.toISOString().substr(0, 10) && val <= threeMonthsLater.toISOString().substr(0, 10)) return true;else return false;\n    },\n    search: function search() {\n      this.SelectedEventList = this.$store.getters.EventList;\n      if (this.eventName != \"\") this.SelectedEventList = this.SelectedEventList.filter(this.eventName);\n      if (this.SelectedCategories.length != 0) this.SelectedEventList = this.SelectedEventList.filter(this.category);\n      if (this.SelectedOrganizations.length != 0) this.SelectedEventList = this.SelectedEventList.filter(this.organization);\n      if (this.SelectedLocations.length != 0) this.SelectedEventList = this.SelectedEventList.filter(this.location);\n      if (this.startTime != null) this.SelectedEventList = this.SelectedEventList.filter(this.sTime);\n      if (this.endTime != null) this.SelectedEventList = this.SelectedEventList.filter(this.eTime);\n      this.SelectedEventList = this.SelectedEventList.filter(this.date);\n      if (!this.fullEvents) this.SelectedEventList = this.SelectedEventList.filter(this.capacity);\n      this.updateFilteredEventList(this.SelectedEventList);\n    },\n    eventName: function eventName(value) {\n      return value.Name.includes(this.EventName);\n    },\n    category: function category(value) {\n      return this.SelectedCategories.includes(value.Category);\n    },\n    organization: function organization(value) {\n      return this.SelectedOrganizations.includes(value.Organization);\n    },\n    location: function location(value) {\n      return this.SelectedLocations.includes(value.Location);\n    },\n    sTime: function sTime(value) {\n      return value.StartTime >= this.startTime;\n    },\n    eTime: function eTime(value) {\n      return value.EndTime <= this.endTime;\n    },\n    date: function date(value) {\n      return this.datePicker == value.Date;\n    },\n    capacity: function capacity(value) {\n      return value.Attending != value.Capacity;\n    },\n    toggleCategories: function toggleCategories() {\n      if (this.SelectedCategories.length != this.$store.getters.Categories.length) {\n        this.SelectedCategories = this.$store.getters.Categories;\n      } else this.SelectedCategories = [];\n    },\n    toggleOrganizations: function toggleOrganizations() {\n      if (this.SelectedOrganizations.length != this.$store.getters.Organizations.length) this.SelectedOrganizations = this.$store.getters.Organizations;else this.SelectedOrganizations = [];\n    },\n    toggleLocations: function toggleLocations() {\n      if (this.SelectedLocations.length != this.$store.getters.Locations.length) this.SelectedLocations = this.$store.getters.Locations;else this.SelectedLocations = [];\n    },\n    reset: function reset() {\n      this.EventName = \"\";\n      this.SelectedCategories = [];\n      this.SelectedLocations = [];\n      this.SelectedOrganizations = [];\n      this.startTime = \"08:00:00\";\n      this.endTime = \"22:00:00\";\n      this.datePicker = new Date().toISOString().substr(0, 10);\n      this.fullEvents = false;\n      this.SelectedEventList = this.$store.getters.EventList;\n      this.SelectedEventList = this.SelectedEventList.filter(this.date);\n      this.SelectedEventList = this.SelectedEventList.filter(this.capacity);\n      this.updateFilteredEventList(this.SelectedEventList);\n    },\n    newEvent: function newEvent() {\n      this.changeNewEventDialog();\n    },\n    onClickChild: function onClickChild(value) {\n      this.changeView();\n    }\n  }),\n  created: function created() {\n    this.fetchTodos();\n    this.SelectedEventList = this.$store.getters.EventList;\n    this.SelectedEventList = this.SelectedEventList.filter(this.date);\n    this.SelectedEventList = this.SelectedEventList.filter(this.capacity);\n    this.updateFilteredEventList(this.SelectedEventList);\n  },\n  data: function data() {\n    return {\n      SelectedCategories: [],\n      SelectedLocations: [],\n      SelectedOrganizations: [],\n      datePicker: new Date().toISOString().substr(0, 10),\n      dialog: true,\n      SelectedEventList: [],\n      startTime: \"08:00:00\",\n      endTime: \"22:00:00\",\n      startMenu: false,\n      endMenu: false,\n      fullEvents: false,\n      today: new Date(),\n      EventName: \"\"\n    };\n  }\n};",{"version":3,"sources":["/Users/AJApple/Downloads/furry-fortnight/fiu-map/src/views/EventPage/EventPage.js"],"names":["mapGetters","mapActions","mapMutations","NewEvent","Table","Map","ViewEvent","name","props","source","String","components","computed","iconCategory","SelectedCategories","length","$store","getters","Categories","iconOrganization","SelectedOrganizations","Organizations","iconLocation","SelectedLocations","Locations","methods","allowedHours","v","allowedMinutes","allowedDates","val","threeMonthsLater","Date","setMonth","today","getMonth","toISOString","substr","search","SelectedEventList","EventList","eventName","filter","category","organization","location","startTime","sTime","endTime","eTime","date","fullEvents","capacity","updateFilteredEventList","value","Name","includes","EventName","Category","Organization","Location","StartTime","EndTime","datePicker","Attending","Capacity","toggleCategories","toggleOrganizations","toggleLocations","reset","newEvent","changeNewEventDialog","onClickChild","changeView","created","fetchTodos","data","dialog","startMenu","endMenu"],"mappings":"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","sourcesContent":["import { mapGetters, mapActions, mapMutations } from \"vuex\";\nimport NewEvent from \"../../components/NewEvent/NewEvent.vue\";\nimport Table from \"../../components/Table/Table.vue\";\nimport Map from \"../../components/Map/Map.vue\";\nimport ViewEvent from \"../../components/ViewEvent/ViewEvent.vue\";\n\nexport default {\n  name: \"EventPage\",\n  props: {\n    source: String\n  },\n  components: {\n    NewEvent,\n    Table,\n    Map,\n    ViewEvent\n  },\n  computed: {\n    ...mapGetters([\n      \"Categories\",\n      \"Locations\",\n      \"Organizations\",\n      \"EventList\",\n      \"ShowList\",\n      \"FilteredEventList\",\n      \"Todos\",\n      \"NewEventDialog\"\n    ]),\n    iconCategory() {\n      if (\n        this.SelectedCategories.length == this.$store.getters.Categories.length\n      )\n        return \"mdi-close-box\";\n      return \"mdi-checkbox-blank-outline\";\n    },\n    iconOrganization() {\n      if (\n        this.SelectedOrganizations.length ==\n        this.$store.getters.Organizations.length\n      )\n        return \"mdi-close-box\";\n      return \"mdi-checkbox-blank-outline\";\n    },\n    iconLocation() {\n      if (this.SelectedLocations.length == this.$store.getters.Locations.length)\n        return \"mdi-close-box\";\n      return \"mdi-checkbox-blank-outline\";\n    }\n  },\n  methods: {\n    ...mapActions([\n      \"updateCategories\",\n      \"updateLocations\",\n      \"updateOrganizations\",\n      \"updateFilteredEventList\",\n      \"fetchTodos\",\n      \"changeNewEventDialog\"\n    ]),\n    ...mapMutations([\n      \"updateCategories\",\n      \"updateLocations\",\n      \"updateOrganizations\",\n      \"updateDate\",\n      \"updateFilteredEventList\"\n    ]),\n    allowedHours: v => v >= 8 && v <= 22,\n    allowedMinutes: v => !(v % 15),\n    allowedDates(val) {\n      var threeMonthsLater = new Date();\n      threeMonthsLater.setMonth(this.today.getMonth() + 3);\n\n      if (\n        val >= this.today.toISOString().substr(0, 10) &&\n        val <= threeMonthsLater.toISOString().substr(0, 10)\n      )\n        return true;\n      else return false;\n    },\n    search() {\n      this.SelectedEventList = this.$store.getters.EventList;\n      if (this.eventName != \"\")\n        this.SelectedEventList = this.SelectedEventList.filter(this.eventName);\n      if (this.SelectedCategories.length != 0)\n        this.SelectedEventList = this.SelectedEventList.filter(this.category);\n      if (this.SelectedOrganizations.length != 0)\n        this.SelectedEventList = this.SelectedEventList.filter(\n          this.organization\n        );\n      if (this.SelectedLocations.length != 0)\n        this.SelectedEventList = this.SelectedEventList.filter(this.location);\n      if (this.startTime != null)\n        this.SelectedEventList = this.SelectedEventList.filter(this.sTime);\n      if (this.endTime != null)\n        this.SelectedEventList = this.SelectedEventList.filter(this.eTime);\n      this.SelectedEventList = this.SelectedEventList.filter(this.date);\n      if (!this.fullEvents)\n        this.SelectedEventList = this.SelectedEventList.filter(this.capacity);\n\n      this.updateFilteredEventList(this.SelectedEventList);\n    },\n    eventName(value) {\n      return value.Name.includes(this.EventName);\n    },\n    category(value) {\n      return this.SelectedCategories.includes(value.Category);\n    },\n    organization(value) {\n      return this.SelectedOrganizations.includes(value.Organization);\n    },\n    location(value) {\n      return this.SelectedLocations.includes(value.Location);\n    },\n    sTime(value) {\n      return value.StartTime >= this.startTime;\n    },\n    eTime(value) {\n      return value.EndTime <= this.endTime;\n    },\n    date(value) {\n      return this.datePicker == value.Date;\n    },\n    capacity(value) {\n      return value.Attending != value.Capacity;\n    },\n    toggleCategories() {\n      if (\n        this.SelectedCategories.length != this.$store.getters.Categories.length\n      ) {\n        this.SelectedCategories = this.$store.getters.Categories;\n      } else this.SelectedCategories = [];\n    },\n    toggleOrganizations() {\n      if (\n        this.SelectedOrganizations.length !=\n        this.$store.getters.Organizations.length\n      )\n        this.SelectedOrganizations = this.$store.getters.Organizations;\n      else this.SelectedOrganizations = [];\n    },\n    toggleLocations() {\n      if (this.SelectedLocations.length != this.$store.getters.Locations.length)\n        this.SelectedLocations = this.$store.getters.Locations;\n      else this.SelectedLocations = [];\n    },\n    reset() {\n      this.EventName = \"\";\n      this.SelectedCategories = [];\n      this.SelectedLocations = [];\n      this.SelectedOrganizations = [];\n      this.startTime = \"08:00:00\";\n      this.endTime = \"22:00:00\";\n      this.datePicker = new Date().toISOString().substr(0, 10);\n      this.fullEvents = false;\n      this.SelectedEventList = this.$store.getters.EventList;\n      this.SelectedEventList = this.SelectedEventList.filter(this.date);\n      this.SelectedEventList = this.SelectedEventList.filter(this.capacity);\n      this.updateFilteredEventList(this.SelectedEventList);\n    },\n    newEvent() {\n      this.changeNewEventDialog();\n    },\n    onClickChild(value) {\n      this.changeView();\n    }\n  },\n  created() {\n    this.fetchTodos();\n    this.SelectedEventList = this.$store.getters.EventList;\n    this.SelectedEventList = this.SelectedEventList.filter(this.date);\n    this.SelectedEventList = this.SelectedEventList.filter(this.capacity);\n    this.updateFilteredEventList(this.SelectedEventList);\n  },\n  data: () => ({\n    SelectedCategories: [],\n    SelectedLocations: [],\n    SelectedOrganizations: [],\n    datePicker: new Date().toISOString().substr(0, 10),\n    dialog: true,\n    SelectedEventList: [],\n    startTime: \"08:00:00\",\n    endTime: \"22:00:00\",\n    startMenu: false,\n    endMenu: false,\n    fullEvents: false,\n    today: new Date(),\n    EventName: \"\"\n  })\n};\n"]}]}