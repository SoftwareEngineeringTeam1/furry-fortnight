{"remainingRequest":"/Users/AJApple/Downloads/fiu-map/node_modules/babel-loader/lib/index.js!/Users/AJApple/Downloads/fiu-map/node_modules/eslint-loader/index.js??ref--13-0!/Users/AJApple/Downloads/fiu-map/src/store/modules/Event.js","dependencies":[{"path":"/Users/AJApple/Downloads/fiu-map/src/store/modules/Event.js","mtime":1574892304000},{"path":"/Users/AJApple/Downloads/fiu-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/AJApple/Downloads/fiu-map/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/AJApple/Downloads/fiu-map/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var state = {\n  event: {\n    Name: \"\",\n    User: \"\",\n    Organization: \"\",\n    Category: \"\",\n    Location: \"\",\n    Attending: 0,\n    Capacity: 0,\n    StartTime: \"\",\n    EndTime: \"\",\n    Date: \"\",\n    Comment: \"\"\n  }\n};\nvar getters = {\n  Event: function Event(state) {\n    return state.event;\n  }\n};\nvar actions = {\n  fetchEvent: function fetchEvent(_ref, newEvent) {\n    var commit = _ref.commit;\n    commit(\"setEvent\", newEvent);\n  }\n};\nvar mutations = {\n  setEvent: function setEvent(state, newEvent) {\n    state.event = newEvent;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/AJApple/Downloads/fiu-map/src/store/modules/Event.js"],"names":["state","event","Name","User","Organization","Category","Location","Attending","Capacity","StartTime","EndTime","Date","Comment","getters","Event","actions","fetchEvent","newEvent","commit","mutations","setEvent"],"mappings":"AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,YAAY,EAAE,EAHT;AAILC,IAAAA,QAAQ,EAAE,EAJL;AAKLC,IAAAA,QAAQ,EAAE,EALL;AAMLC,IAAAA,SAAS,EAAE,CANN;AAOLC,IAAAA,QAAQ,EAAE,CAPL;AAQLC,IAAAA,SAAS,EAAE,EARN;AASLC,IAAAA,OAAO,EAAE,EATJ;AAULC,IAAAA,IAAI,EAAE,EAVD;AAWLC,IAAAA,OAAO,EAAE;AAXJ;AADK,CAAd;AAgBA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,eAAAd,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAV;AAAA;AADE,CAAhB;AAIA,IAAMc,OAAO,GAAG;AACdC,EAAAA,UADc,4BACSC,QADT,EACmB;AAAA,QAApBC,MAAoB,QAApBA,MAAoB;AAC/BA,IAAAA,MAAM,CAAC,UAAD,EAAaD,QAAb,CAAN;AACD;AAHa,CAAhB;AAMA,IAAME,SAAS,GAAG;AAChBC,EAAAA,QADgB,oBACPpB,KADO,EACAiB,QADA,EACS;AACvBjB,IAAAA,KAAK,CAACC,KAAN,GAAcgB,QAAd;AACD;AAHe,CAAlB;AAMA,eAAe;AACbjB,EAAAA,KAAK,EAALA,KADa;AAEba,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbI,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["const state = {\n  event: {\n    Name: \"\",\n    User: \"\",\n    Organization: \"\",\n    Category: \"\",\n    Location: \"\",\n    Attending: 0,\n    Capacity: 0,\n    StartTime: \"\",\n    EndTime: \"\",\n    Date: \"\",\n    Comment: \"\"\n  }\n};\n\nconst getters = {\n  Event: state => state.event\n};\n\nconst actions = {\n  fetchEvent({ commit }, newEvent) {\n    commit(\"setEvent\", newEvent);\n  }\n};\n\nconst mutations = {\n  setEvent(state, newEvent){\n    state.event = newEvent;\n  } \n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}